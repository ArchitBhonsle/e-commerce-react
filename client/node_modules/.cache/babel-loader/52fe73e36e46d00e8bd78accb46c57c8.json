{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart()); // Observable pattern\n\n    collectionRef.onSnapshot(async snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      fetchCollectionsSuccess(collectionsMap);\n    }, error => dispatch(fetchCollectionsFailure(error.message))); // // Promise pattern\n    // collectionRef\n    //   .get()\n    //   .then((snapShot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //     fetchCollectionsSuccess(collectionsMap);\n    //   })\n    //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n    // // Fetch/API pattern\n    // fetch(\n    //   'https://firestore.googleapis.com/v1/projects/e-commerce-react-8120b/databases/(default)/documents/collections'\n    // )\n    //   .then((response) => response.json)\n    //   .then((collections) => console.log(collections));\n  };\n};","map":{"version":3,"sources":["/home/puipuituipui/Github/e-commerce-react/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","onSnapshot","snapShot","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAGJ,eAAe,CAACK;AADmB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAMJ,eAAe,CAACQ,yBADgC;AAE1DC,EAAAA,OAAO,EAAGF;AAFgD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAMJ,eAAe,CAACY,yBAD8B;AAExDH,EAAAA,OAAO,EAAGE;AAF8C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFmB,CAInB;;AACAY,IAAAA,aAAa,CAACE,UAAd,CACE,MAAOC,QAAP,IAAoB;AAClB,YAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAZ,MAAAA,uBAAuB,CAACC,cAAD,CAAvB;AACD,KAJH,EAKGY,KAAD,IAAWL,QAAQ,CAACJ,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CALrB,EALmB,CAanB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,GA5BD;AA6BD,CA9BM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n  type : ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type    : ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload : collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type    : ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload : errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    // Observable pattern\n    collectionRef.onSnapshot(\n      async (snapShot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n        fetchCollectionsSuccess(collectionsMap);\n      },\n      (error) => dispatch(fetchCollectionsFailure(error.message))\n    );\n\n    // // Promise pattern\n    // collectionRef\n    //   .get()\n    //   .then((snapShot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n    //     fetchCollectionsSuccess(collectionsMap);\n    //   })\n    //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n    // // Fetch/API pattern\n    // fetch(\n    //   'https://firestore.googleapis.com/v1/projects/e-commerce-react-8120b/databases/(default)/documents/collections'\n    // )\n    //   .then((response) => response.json)\n    //   .then((collections) => console.log(collections));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}