{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/home/puipuituipui/Github/e-commerce-react/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAAC,CAAEC,UAAF,CAAD,EAAkBE,IAAD,IAAUA,IAAI,CAACE,WAAhC,CAAxC;AAEP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAAEI,iBAAF,CADuD,EAEtDC,WAAD,IAAkBA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAFnC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CACZ,CAAEI,iBAAF,CADY,EAEXC,WAAD,IAAkBA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFtD,CADT;AAMP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CAAC,CAAEC,UAAF,CAAD,EAAkBE,IAAD,IAAUA,IAAI,CAACW,UAAhC,CAAjD;AAEP,OAAO,MAAMC,wBAAwB,GAAGf,cAAc,CACpD,CAAEC,UAAF,CADoD,EAEnDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAFmC,CAA/C","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector([ selectShop ], (shop) => shop.collections);\n\nexport const selectCollectionsForPreview = createSelector(\n  [ selectCollections ],\n  (collections) => (collections ? Object.keys(collections).map((key) => collections[key]) : [])\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector(\n    [ selectCollections ],\n    (collections) => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector([ selectShop ], (shop) => shop.isFetching);\n\nexport const selectIsCollectionLoaded = createSelector(\n  [ selectShop ],\n  (shop) => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}